#+title: deploy tax.co.web over EC2
* refs
  [[file:../tech/20210414195930-aws-frequently-used-commands.org][AWS, frequently used commands]]
* TODO change domain name
  ofiscal.microsimulaciones.org/
* TODO set up automatic backups
  https://aws.amazon.com/blogs/aws/aws-backup-ec2-instances-efs-single-file-restore-and-cross-region-backup/
* TODO understand [[file:../tech/20210511125343-hibernation_for_aws_ec2.org][hibernation for AWS EC2]]
* initial setup, how to
** launch an EC2 instance
*** PITFALLs
**** chose the cheapest 16GB machine here
     https://aws.amazon.com/ec2/pricing/on-demand/
***** some cheap ones that look good enough
****** r6g.large
       2 processors, 16 GB, EBS, 10 gigabit, 10c/hr
       Currently unavailable. Previous generation, I suspect.
****** r5a.large
       2 processors, 16 GB, EBS, 10 gigabit, 10c/hr
       Same specs.
**** Use US East, not Sao Paolo (which is like 20% more).
     If few machines appear, refresh the page. I found one today (2020 05 04)
***** use US East 1 (N Virginia)
      Cheaper than Sao Paolo by at least 15%
**** enable hibernation
     or if not, make backups (from EC2 console)
**** Ubuntu is at least 5, maybe 10 GB slimmer
     It doesn't come with zip, maybe other stuff I want.
*** the config I'm trying
**** AMI: Amazon Linux 2
**** Instance type: r5a.large, 16 GB RAM
**** configureation: enable hibernation
**** storage: 50 GB HD
     Using 45 with Ubuntu (which is slimmer than Amazon Linux) I ran into the ceiling when unpacking the docker images.
**** Configure Security Group
     All of these are accessible from anywhere
       (not "My IP", and not "Custom", whatever that is).
     SSH   (default), which (I think) means* port 22
     HTTP  (added),   which (I think) means* port 80
     HTTPS (added),   which (I think) means* port 443
** install docker, emacs, git, zip
*** for AL 2:	sudo amazon-linux-extras install docker emacs git
    If that doesn't work, `yum install` might.
*** for AL:	sudo yum install -y docker emacs git
*** for Ubuntu
    sudo apt update # IMPORTANT. Without this nothing happens.
    sudo apt install -y zip unzip jq git emacs docker.io
** transfer my data into the EC2 instance
*** PITFALL: Keep the S3 bucket with my data
    Transferring from it to an EC2 instance (in the same region) is extremely fast. Transferring from here takes hours.
*** package local stuff
**** .tar the docker images
***** where I put it
      ~/tax_co.docker.tar
***** how
      docker save -o tax_co.docker.tar ofiscal/tax.co:2021-04-27.Colombia-time ofiscal/tax.co:latest
      In SmSn see :vOClYQimc3YjfZrx:
      https://stackoverflow.com/a/28364045/916142
***** why: speed
      Uploading such a .tar file from my home machine to the server will be much faster than downloading it from DockerHub onto the server.
**** .zip the repos
*** upload to S3
*** ingest into EC2 instance
**** have made S3 buckets public, so can use wget
***** download each individually
      These are ordered by size.
      wget https://tax-co-archives.s3.amazonaws.com/tax_co_web.zip
      wget https://tax-co-archives.s3.amazonaws.com/tax_co_online.zip
      wget https://tax-co-archives.s3.amazonaws.com/tax_co.docker.tar
***** maybe I can download the whole bucket
      but who cares, the above is really fast
**** could use S3 CLI, but it's more work
     aws s3 cp s3://my_bucket/my_folder/my_file.ext my_copied_file.ext
*** uncompress
    unzip tax_co_web.zip
    unzip tax_co_online.zip
    # for the docker images, see "configure Docker" below
** Docker
*** configure Docker not to need sudo
   sudo dockerd &
   sudo groupadd docker
   sudo usermod -aG docker $JBB_AWS_USER
   << close ssh and ssh back in >>
*** docker load -i tax_co.docker.tar
*** PITFALL: Might need to reboot instance
    Before doing this, the Ubuntu instance didn't recognize that my non-root "ubuntu" user had docker privileges. (Maybe I could have rebooted Docker but it wasn't easy -- systemctl didn't do it, nor dockerd.)
*** in the Docker container, update pip packages
    :PROPERTIES:
    :ID:       b8ffb948-5c2e-425f-8d59-094225f0b615
    :END:
**** alternatives
***** this would work
      pip install -U <pip-installed packages from the Dockerfile>
      pip3 install --upgrade  csv-diff pydotplus graphviz \
	weightedcalcs yfinance yahoofinancials            \
	surbtc django icecream
***** BLOCKED rebuilt, haven't tested Dockerfile
      It's 1.5 GB bigger than the last one.
**** If this isn't done, Django will tell me, thanks to requirements.txt
** git
   git config --global core.editor "emacs -nw"
     # -nw: use Emacs at the command line (not via the gui)
     # Maybe not necessary in a GUIless system.
   Copy ~/.ssh/id_rsa from my home system to the new system.
   chmod 600 ~/.ssh/id_rsa
   update git repos
     Add my user name and email (Git will say how when I try to push).
   checkout the "online" branch of tax.co.web
** configure filepaths
*** tax.co.web/paths.json
    should be something like this:

  { "base_system_tax_co"     : "/home/ubuntu/tax.co",
    "base_system_tax_co_web" : "/home/ubuntu/tax.co.web",
    "docker_tax_co"          : "/mnt/tax_co",
    "docker_django"          : "/mnt/django",
    "docker_apache"          : "/mnt/apache2"
** transfer new data
*** tax_co/secret
* restart it, how to
** update native ~/.ssh/config
** update native [[id:7edb7369-ce7a-47a7-a7d5-2dead9a03ac0][record of the]] IPv4 Public IP address for the EC2 instance
   and login
** Route53: associate a domain name with the EC2 instance
   https://docs.aws.amazon.com/Route53/latest/DeveloperGuide/routing-to-ec2-instance.html
*** faster: edit an old association in Route53
    I've already got something associated with sim.jefbrown.net.
    Just tweak that to the new IPv4 address.
*** how to create the association in Route53
    Go to that domain.
    Choose Create Record.
    The first three boxes are all I used, and I think I left at least one of them the way it was.
** visit this URL
   http://sim.jefbrown.net/myapp/run_make/write_time
     based on this
       http://localhost:8000/myapp/run_make/write_time
* create an EC2 backup ("snapshot")
** PITFALL why to do that
   So I can stop the EC2 instance and not worry if it's deleted automatically, which it will be if not hibernated.
** how
   Find the hard drive /dev/sda1 in the EC2 instance info (in the WUI).
   Click that -- it's a link.
   Select "create snapshot".
** where mine is
   https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#Snapshots:visibility=owned-by-me;snapshotId=snap-07448d2690e517576;sort=snapshotId
