:PROPERTIES:
:ID:       7971c41c-a733-4e13-8207-8664b75b39b7
:END:
#+title: graph changes in tax burden by decile in tax.co.web
* How to draw.
** draw arrows, red for up, green for down
   :PROPERTIES:
   :ID:       bf27d9d3-3dc0-418f-8a32-322d65c0dc93
   :END:
   See
     arrows_on_bars()
   in
     python/draw/examples.py
** to draw paired bar charts, like we did in the `cities` repo
   ~/of/_old/cities/Code/draw/chart/pairs.py
* DONE [[id:5c33d122-94ee-41fa-ba7e-b1ed1a539fc4][Create a new total tax variable.]]
* TODO Make a baseline every time.
  :PROPERTIES:
  :ID:       b8f2e47c-a378-439b-8836-769065fb41be
  :END:
** Bear in mind that [[id:106ca7be-c9de-42c6-89aa-db93c5202304][this]] means the baseline is approximate.
** TODO Don't modify the Makefile, but create a new user.
   Call the user "baseline" (no ampersand needed).
   Check user/baseline/ into git.
   In run-makefile.py, first run on baseline,
   then on the current user.
** TODO functionalize `run-makefile.py`
   so that it can [[id:a0b67b1d-225a-4174-ba68-9c4d2727b927][build multiple users]]
   without a lot of redundant code.
** TODO "Every time" in run-makefile, build two "users".
   :PROPERTIES:
   :ID:       a0b67b1d-225a-4174-ba68-9c4d2727b927
   :END:
   i.e. the baseline "user" and the actual user.
   The baseline user's config should use the full sample.
   That's affordable because it won't actually run every time --
   it will only build the baseline user when the code changes.
* TODO Draw something that compares to the baseline.
** This should be a separate makefile target.
   That way I can avoid running it for the baseline user.
   (It wouldn't be terrible if it did,
   but it might be confusing for later coders.)
** Compare the full-sample baseline results to the current user's.
   Do that even if the current user is using another subsample.
   It can only help.
